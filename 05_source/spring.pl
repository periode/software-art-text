
#!/usr/bin/perl
use strict;
use warnings;


our @life = (0..70);
my $self = {
      age => $life[int($#life/2)],
#
#078101108032109101122122111032100101108032099097109109
#105110032100105032110111115116114097032118105116097
#
      remember => sub{scalar @_},
};
our $wood = {
              dark=>1,
#109105032114105116114111118097105032112101114032117110
#097032115101108118097032111115099117114097
#
              straight_way => undef,
#099104101039032108097032100105114105116116097032118105
#097032101114097032115109097114114105116097046
#
#
              wild=>1, rough=>1,
              stubborn=>1, inside=>[],
};
while ( $self->{'age'} ){
    push @{$wood->{'inside'}},$self;
    if (scalar @$wood{qw(wild rough stubborn)}) {
#065104105032113117097110116111032097032100105114032113
#117097108032101114097032101039032099111115097032100117114097
#
     for (@$wood{qw(wild rough stubborn)}) {
#101115116097032115101108118097032115101108118097103103
#105097032101032097115112114097032101032102111114116101
#
      $self->{'fear'}+= $$self{remember}->($_);
#099104101032110101108032112101110115105101114032114105
#110111118097032108097032112097117114097033
#
#
     }
    }
    last;
}

END {
      seek DATA,0,0;
      while (<DATA>){
            print "\n" if /^#$/;
            s/^#//;
            print map {chr 0+$_} ($_=~/\d{3}/g);
      }
}
__DATA__

