{"questions": [["(consolelog will be changed into return, it's just to view the output)", "Basically, I am a beginner who recently started and I wanted to make a simple function that returns a value of the function. For example; if change(5) was inputted, it would return a string value of 5 x's, so xxxxx. If it was change(7), it would return me xxxxxxx, so any idea how to do this? Because my code only gives value from 0 to my inputted value. "], ["I'm trying to learn better use of JS functions and I have a feeling what I'm after can be done using reduce or map or both, but I simply cannot find examples of this particular scenario:", "I have an array of objects, eg:", "The goal is to reduce to an array that merges all the key values into ONE array for each member, ie:", "Therefore, there were two entries for member 111111, they have been merged and all the other values summed into a single array.", "Honestly, everything I've tried is a mess, so apart from using the boring for loops or adding code here that is clearly rubbish, I hope you can point me in the right direction."], ["I've written some js to the word displaying in #changingword loops through several different words. It mostly works however when it first loads it skips through the second word so it goes from 'design' straight to 'e-commerce solutions', without showing the 'development'. After the first loop it works correctly. My code is below.", "The html:", "The JS:", "Any ideas why this is happening?"]], "answers": ["\nYou can use String.prototype.repeat() for this, similar to the below.\n\n\nfunction change(o)                                      \r\n{                                       \r\n  return 'x'.repeat(o);\r\n}             \r\n\r\nconsole.log(change(5));\r\nconsole.log(change(9));\n\n\n\n\nHowever, as pointed out, this is not supported in Internet Explorer.\n  For a cross-platform solution you can either use the Polyfill as\n  specified in the linked documentation above or off course do one of\n  the already suggested solutions.\n\n", "\nfunction change(count){\n   var string = \"\"; // declare an empty string;\n   for(var i=0; i<count; i++){ \n      string = string + \"x\"; // keep adding an x in each iteration to the string\n\n   }\n   return string; // return the string \n}\n\nchange(5); // gives xxxxx\n\n", "\n\n\nfunction createX(num) {\r\n  var str = '';\r\n  for(i=0; i<num; i++){\r\n    str += 'x';\r\n  }\r\n  return str;\r\n}\r\n\r\nconsole.log(createX(5));\n\n\n\nSomething like this?\n", "\nI suppose you want this:\nfunction change(o)                                      \n{                                       \n  var str = \"\";                                     \n  for (var p = 0; p<o ;p++)                                        \n  {                                     \n    str += 'x';                  \n  }                                     \n  console.log(str);                                   \n}         \n\nchange(5); \n\n", "\nHere is how you can do it:\n\n\nfunction change(o)                                      \r\n{                                       \r\n  var str = \"\";                                     \r\n  for (var p = 0; p<o ;p++)                                        \r\n  {                                                                            \r\n    str = str + \"x\";                                                              \r\n  }                                     \r\nconsole.log(str);                                   \r\n}                                       \r\nchange(5);   \n\n\n\n", "\nYou can do like this\n\n\nfunction change(o)                                      \r\n{ \r\n  if(o>0){\r\n    console.log(Array(parseInt(o)+1).join(\"x\"));\r\n  }else{\r\n    console.log(\"Blank\");\r\n  }\r\n}\n<input type=\"number\" onkeyup=\"change(this.value)\">\n\n\n\n", "\nYou can do \n\n\nconst data =  [\r\n    {\r\n        \"member\": \"111111\",\r\n        \"offers\": 0,\r\n        \"categories\": 0,\r\n        \"total\": 100,\r\n        \"favorites\": 0\r\n    },\r\n    {\r\n        \"member\": \"111111\",\r\n        \"offers\": 2,\r\n        \"categories\": 1,\r\n        \"total\": 400,\r\n        \"favorites\": 1\r\n    },\r\n    {\r\n        \"member\": \"222222\",\r\n        \"offers\": 1,\r\n        \"categories\": 0,\r\n        \"total\": 50,\r\n        \"favorites\": 5\r\n    }\r\n]\r\n\r\n\r\nlet result = data.reduce((a, b) => {\r\n  a[b.member] = a[b.member] || {member : b.member};\r\n  for(let property of Object.keys(b)){\r\n    if(property == 'member') continue;\r\n    a[b.member][property] = a[b.member][property] || 0;\r\n    a[b.member][property] += b[property];\r\n  }\r\n  return a;\r\n}, {});\r\n\r\nresult = Object.keys(result).map(e => result[e]);\r\n\r\nconsole.log(result);\n\n\n\n", "\nThe problem is in here:\n$('#changingword').fadeOut(function(){\n    $(this).html(words[i=(i+1)%words.length]).fadeIn(\"slow\");\n});\n\nYou're updating i, then using the resulting value in the calculation.\nUpdate i after using it:\n$('#changingword').fadeOut(function(){\n    $(this).html(words[i%words.length]).fadeIn(\"slow\");\n    i++;\n});\n\n", "\nI think the issue is that on first pass through the words[i=(i+1)%words.length] will be equivalent to words[1] not words[0]. \nYou can increment but return the preincremented value by doing \n$('#changingword').fadeOut(function(){\n            $(this).html(words[i++%words.length]).fadeIn(\"slow\");\n        });\n\n", "\nIt can be tricky to do increment and use result in the same line, you need to be sure how the expression is evaluated.\nChange:\nwords[i=(i+1)%words.length]\n\nto:\nwords[i=(++i)%words.length]\n\nAnd set i=-1; to start.\nNow the (++i) makes sure i is incremented by 1 immediately, before rest of the expression, that's why we need to start at -1. From there it's all good.\nIt's an alternative to already posted answer if you wanna keep the expression with increment instead breaking the increment to another row.\nGeneral difference of ++i and i++ is same across many languages so it's worth looking into it:\nSO post with quick explanation\n"]}